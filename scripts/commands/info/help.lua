local command = { '–ø–æ–º–æ—â—å', '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥', dev = 1, smile='&#128220;' };

local categories = {
	{ "–ü—Ä–æ—Ñ–∏–ª—å", "&#128107;", "profile" },
	{ "–ò–≥—Ä–æ–≤—ã–µ", "&#127923;", "games" },
	{ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "&#128240;", "info" },
	{ "–§–æ—Ç–æ", "&#9989;", "photo" },
	{ "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ", "&#128295;", "tools" },
	{ "–ü—Ä–æ—á–µ–µ", "&#9827;", "other" }
};

function command.category (msg, args, other, rmsg, user)
	local cat = categories[tonumber(args[2])];
	if not cat then return "err:–∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" end
	rmsg:line ("%s –ö–∞—Ç–µ–≥–æ—Ä–∏—è %s", cat[2], cat[1]);

	for key, com in pairs(Commands.commands) do
		if not com.right or user:isRight(com.right) then
			if (not com.type and cat[3] == "other") or com.type == cat[3] then
				local price = com.price and " | üí≥ "..com.price or '';
				rmsg:line ("%s %s %s - %s %s", com.smile or 'üìò', com[1], com.use or '', com[2], price);
			end
		end
	end
end

function command.exe (msg, args, other, rmsg, user)
	if tonumber(args[2]) then return command.category (msg, args, other, rmsg, user) end
	if args[2] and Commands.commands[args[2]:lower()] then
		local com = Commands.commands[args[2]:lower()];
		return com.help and com.help(msg, args, other, rmsg) or "err:–¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∏–º–µ–µ—Ç —Å–ø—Ä–∞–≤–∫–∏.";
	end

	rmsg:line ("&#9830; –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥");
	for i = 1, #categories do rmsg:line ("%s %i. %s", categories[i][2], i, categories[i][1]) end
	rmsg:line ("&#10145; –ø–æ–º–æ—â—å <–Ω–æ–º–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏>");
end

return command;
